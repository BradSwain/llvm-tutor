#===============================================================================
# CMAKE SCRIPT FOR WINDOWS
# This script is very similar to CmakeLists.txt with a few minor tweaks/changes
# required for Windows only.
#===============================================================================

cmake_minimum_required(VERSION 3.13.4)
project(llvm-tutor-hello-world)

function(add_portable_llvm_plugin plugin_target_name)
  set(extraArgs)
  if (WIN32 OR CYGWIN)
    configure_file(
      ${CMAKE_SOURCE_DIR}/cmake/windows-llvm-plugin.def.in
      ${plugin_target_name}.def)
    set(extraArgs ${CMAKE_CURRENT_BINARY_DIR}/${plugin_target_name}.def)
  endif()

  add_llvm_pass_plugin(${plugin_target_name} 
    ${extraArgs}
    ${ARGN})
  set_target_properties(${plugin_target_name}
    PROPERTIES
      CXX_STANDARD 17
      CXX_STANDARD_REQUIRED ON)
  if (MSVC)
    target_compile_definitions(${plugin_target_name} 
      PUBLIC _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING)
  endif()
endfunction()

#===============================================================================
# 1. LOAD LLVM CONFIGURATION
#===============================================================================
# Set this to a valid LLVM installation dir
set(LT_LLVM_INSTALL_DIR "" CACHE PATH "LLVM installation directory")

# Add the location of LLVMConfig.cmake to CMake search paths (so that
# find_package can locate it)
list(APPEND CMAKE_PREFIX_PATH "${LT_LLVM_INSTALL_DIR}/lib/cmake/llvm/")

find_package(LLVM 11.0.0 REQUIRED CONFIG)

# HelloWorld includes headers from LLVM - update the include paths accordingly
include_directories(${LLVM_INCLUDE_DIRS})

# Load LLVM's CMake macros and functions
list(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")
include(AddLLVM)

#===============================================================================
# 2. LLVM-TUTOR BUILD CONFIGURATION
#===============================================================================
# Use the same C++ standard as LLVM does
set(CMAKE_CXX_STANDARD 14 CACHE STRING "")

# LLVM is normally built without RTTI. Be consistent with that.
if(NOT LLVM_ENABLE_RTTI)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-rtti")
endif()

#===============================================================================
# 3. ADD THE TARGET
#===============================================================================
# The following configuration is based on:
#   https://github.com/llvm/llvm-project/blob/release/11.x/llvm/lib/Transforms/Hello/CMakeLists.txt
if(WIN32 OR CYGWIN)
  set(LLVM_LINK_COMPONENTS Core Support)
endif()

add_portable_llvm_plugin(HelloWorld
  HelloWorld.cpp
  
  DEPENDS
  intrinsics_gen
  LINK_LIBS
  support
  PLUGIN_TOOL
  opt
)
